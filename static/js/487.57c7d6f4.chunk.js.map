{"version":3,"file":"static/js/487.57c7d6f4.chunk.js","mappings":"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","sources":["pages/Movies/Searching/Searching.styled.js","pages/Movies/Searching/Searching.jsx","services/getSearching.js","pages/Movies/Movie/Movie.styled.js","pages/Movies/Movie/Movie.jsx","pages/Movies/Movies.jsx","services/getMovieId.js"],"sourcesContent":["import styled from \"styled-components\";\n\nimport { Link } from \"react-router-dom\";\n\nexport const StyledSearching = styled.section`\n  padding: 30px 0 30px;\n  color: #333;\n  min-height: 100%;\n`;\n\nexport const StyledTitle = styled.h1`\n  margin: 0 0 30px 0;\n  font-size: 40px;\n`;\n\nexport const StyledList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, 220px);\n  grid-template-rows: repeat(4, 370px);\n  justify-content: center;\n  gap: 24px;\n  margin: 30px 0 0 0;\n`;\n\nexport const StyledItem = styled.li`\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.06);\n\n  transition: all 300ms ease;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const StyledPoster = styled.img`\n  width: 220px;\n  height: 320px;\n  pointer-events: none;\n  user-select: none;\n`;\n\nexport const StyledNavigation = styled.nav`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 200px;\n  height: 40px;\n  font-size: 13px;\n  padding: 0 auto 0;\n  color: #333;\n`;\n\nexport const StyledInput = styled.input`\n  padding: 10px;\n  border: 2px solid #ffd900;\n  color: #333;\n  background-color: transparent;\n  border-radius: 4px;\n  margin-right: 10px;\n  width: 300px;\n  \n  &:focus {\n    outline: none;\n    border-color: #ffd900;\n  }\n  \n  &::placeholder {\n    color: #333;\n    opacity: 0.7;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  padding: 10px 20px;\n  background-color: #ffd900;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: opacity 0.3s ease;\n  \n  &:hover:not(:disabled) {\n    opacity: 0.9;\n  }\n`;\n\nexport const NoResultsText = styled.p`\n  color: #333;\n  margin: 30px auto 0;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.6;\n  padding: 20px;\n  border: solid 2px #ffd900;\n  background-color: #f8f9fa;\n  border-radius: 20px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  max-width: 600px;\n  transition: all 0.3s ease;\n`;\n","import { useState } from \"react\";\n\nimport { Container } from \"../../../components/Container/Container\";\n\nimport { getSearching } from \"../../../services/getSearching\";\n\nimport defaultPoster from \"../../../assets/images/default-poster.webp\";\n\nimport {\n  StyledSearching,\n  StyledTitle,\n  StyledInput,\n  SearchButton,\n  StyledList,\n  StyledItem,\n  StyledPoster,\n  StyledNavigation,\n  StyledLink,\n  NoResultsText,\n} from \"./Searching.styled\";\n\nconst Searching = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [isSearching, setIsSearching] = useState(false);\n\n  const handleSearch = async () => {\n    if (!searchQuery.trim()) return;\n\n    setIsSearching(true);\n\n    try {\n      const data = await getSearching(searchQuery);\n      setSearchQuery(\"\");\n      setMovies(data.results);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  return (\n    <StyledSearching>\n      <Container>\n        <StyledTitle>Searching today</StyledTitle>\n        <div>\n          <StyledInput\n            type=\"text\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Search movies...\"\n          />\n          <SearchButton\n            type=\"button\"\n            onClick={handleSearch}\n          >\n            Search\n          </SearchButton>\n        </div>\n      </Container>\n      {movies.length > 0 ? (\n        <StyledList>\n          {movies.map((movie) => (\n            <StyledItem key={movie.id}>\n              <StyledPoster\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                    : defaultPoster\n                }\n                alt={movie.title}\n              />\n              <StyledNavigation>\n                <StyledLink to={`/movies/${movie.id}`}>\n                  {movie.title}\n                </StyledLink>\n              </StyledNavigation>\n            </StyledItem>\n          ))}\n        </StyledList>\n      ) : (\n        !isSearching && <NoResultsText>No results found</NoResultsText>\n      )}\n    </StyledSearching>\n  );\n};\n\nexport default Searching;\n","const API_KEY = process.env.REACT_APP_API_KEY;\n\nexport const getSearching = async (query) => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(\n      query\n    )}&page=1`\n  );\n\n  return response.json();\n};\n","import styled from \"styled-components\";\n\nexport const StyledMovie = styled.section`\n  padding: 30px 0 0 0;\n`;\n\nexport const StyledCouple = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 50px;\n`;\n\nexport const StyledPoster = styled.img`\n  width: 450px;\n  height: auto;\n  border: solid 5px black;\n`;\n\nexport const StyledDescription = styled.article`\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n  justify-content: center;\n  gap: 30px;\n  width: 450px;\n\n  & > h2 {\n    font-size: 35px;\n  }\n`;\n\nexport const StyledVote = styled.p`\n  color: ${(props) => props.color};\n  font-weight: 900;\n  font-size: 23px;\n`;\n\nexport const StyledOverview = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 15px;\n  font-weight: 500;\n\n  & > span {\n    padding: 0 0 20px 0;\n    font-size: 20px;\n    background-color: #fff;\n  }\n\n  & > p {\n    padding: 20px;\n    border-radius: 20px;\n    background-color: #ffd900;\n  }\n`;\n\nexport const StyledGenres = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 15px;\n  font-weight: 500;\n\n  & > span {\n    padding: 0 0 20px 0;\n    font-size: 20px;\n    background-color: #fff;\n  }\n\n  & > p {\n    width: fit-content;\n    padding: 20px;\n    border-radius: 20px;\n    color: #ffd900;\n    background-color: #000000;\n  }\n`;\n\nexport const StyledManagment = styled.div`\n  padding: 30px 0;\n\n  & > h2 {\n    margin: 0 0 30px 0;\n    font-size: 40px;\n  }\n\n  & > ul {\n    display: flex;\n    justify-content: center;\n    gap: 30px;\n  }\n\n  & li {\n    padding: 5px 10px;\n    background-color: #ffd900;\n    border-radius: 10px;\n\n    transition: all 300ms ease;\n\n    &:hover {\n      transform: scale(1.05);\n    }\n  }\n\n  & a {\n    padding: 10px 15px;\n    font-size: 18px;\n    font-weight: 500;\n    color: #000000;\n  }\n`;\n","import { Link, Outlet } from \"react-router-dom\";\n\nimport defaultPoster from \"../../../assets/images/default-poster.webp\";\n\nimport {\n  StyledMovie,\n  StyledCouple,\n  StyledPoster,\n  StyledDescription,\n  StyledOverview,\n  StyledGenres,\n  StyledManagment,\n  StyledVote,\n} from \"./Movie.styled\";\n\nconst Movie = ({ movie }) => {\n  if (!movie) {\n    return;\n  }\n\n  const countYear = (date) => {\n    return date.slice(0, 4);\n  }\n\n  const countVote = (vote) => {\n    return `${Math.round(vote * 10)}%`;\n  };\n\n  const getVoteColor = (vote) => {\n    const percentage = Math.round(vote * 10);\n    \n    if (percentage >= 0 && percentage < 25) {\n      return '#ff4d4d';\n    } else if (percentage >= 25 && percentage < 50) {\n      return '#fea348';\n    } else if (percentage >= 50 && percentage < 75) {\n      return '#ffd900';\n    } else if (percentage >= 75 && percentage <= 100) {\n      return '#3bff3b';\n    }\n    return '#000';\n  };\n\n  const movieGenres = movie.genres.map((genre) => genre.name).join(\", \");\n\n  return (\n    <StyledMovie>\n      <StyledCouple>\n        <StyledPoster\n          src={movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : defaultPoster}\n          alt={movie.title}\n        />\n        <StyledDescription>\n          <h2>{movie.title} ({countYear(movie.release_date)})</h2>\n          <StyledVote color={getVoteColor(movie.vote_average)}>\n            {countVote(movie.vote_average)}\n          </StyledVote>\n          <StyledOverview><span>Overview:</span><p>{movie.overview}</p></StyledOverview>\n          <StyledGenres><span>Genres:</span><p>{movieGenres}</p></StyledGenres>\n        </StyledDescription>\n      </StyledCouple>\n      <StyledManagment>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link to={`/movies/${movie.id}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${movie.id}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n      </StyledManagment>\n      <Outlet />\n    </StyledMovie>\n  );\n};\n\nexport default Movie;","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nimport { getMovieId } from \"../../services/getMovieId\";\n\nimport Searching from \"./Searching/Searching.jsx\";\nimport Movie from \"./Movie/Movie.jsx\";\n\nconst Movies = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (movieId) {\n      const fetchMovie = async () => {\n        try {\n          const movieDetails = await getMovieId(movieId);\n          setMovie(movieDetails);\n        } catch (error) {\n          console.error(\"Error fetching movie:\", error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchMovie();\n    } else {\n      setLoading(false);\n    }\n  }, [movieId]);\n\n  return (\n    <main>\n      {movieId ? (\n        movie && <Movie movie={movie} movieId={movieId} />\n      ) : (\n        <Searching />\n      )}\n    </main>\n  );\n};\n\nexport default Movies;","const API_KEY = process.env.REACT_APP_API_KEY;\n\nexport const getMovieId = async (id) => {\n  const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`);\n\n  return response.json();\n};\n"],"names":["StyledSearching","styled","section","_templateObject","_taggedTemplateLiteral","StyledTitle","h1","_templateObject2","StyledList","ul","_templateObject3","StyledItem","li","_templateObject4","StyledPoster","img","_templateObject5","StyledNavigation","nav","_templateObject6","StyledLink","Link","_templateObject7","StyledInput","input","_templateObject8","SearchButton","button","_templateObject9","NoResultsText","p","_templateObject0","Searching","movies","setMovies","useState","searchQuery","setSearchQuery","isSearching","setIsSearching","handleSearch","async","trim","data","fetch","concat","process","encodeURIComponent","query","json","getSearching","results","error","console","_jsxs","children","Container","_jsx","type","value","onChange","e","target","onKeyPress","key","placeholder","onClick","length","map","movie","src","poster_path","defaultPoster","alt","title","to","id","StyledMovie","StyledCouple","div","StyledDescription","article","StyledVote","props","color","StyledOverview","StyledGenres","StyledManagment","_ref","movieGenres","genres","genre","name","join","date","release_date","slice","vote","percentage","Math","round","getVoteColor","vote_average","overview","Outlet","Movies","movieId","useParams","setMovie","loading","setLoading","useEffect","movieDetails","getMovieId","fetchMovie","Movie"],"sourceRoot":""}